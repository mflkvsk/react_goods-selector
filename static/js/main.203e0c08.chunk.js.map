{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","handelGood","good","includes","setState","filter","select","clear","arrOfGoods","length","list","this","className","join","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACc,EAAKH,MAAvBC,cAEUG,SAASD,GACzB,EAAKE,UAAS,SAACL,GAAD,MAAY,CACxBC,cAAeD,EAAMC,cAAcK,QAAO,SAAAC,GAAM,OAAIA,IAAWJ,SAGjE,EAAKE,UAAS,SAACL,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAK9CK,MAAQ,WACN,EAAKH,UAAS,SAACL,GACb,IAAuBS,EAAeT,EAA9BC,cAIR,OAFAQ,EAAWC,OAAS,EAEb,CAAET,cAAeQ,O,4CAI5B,WAAU,IAEiBE,EAFlB,OACCV,EAAkBW,KAAKZ,MAAvBC,cASR,OACE,sBAAKY,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,6BACGZ,EAAcS,OAAd,WAZgBC,EAaMV,EAZzBU,EAAKD,OAAS,EACV,GAAN,OAAUC,EAAKG,KAAK,MAApB,iBAGI,GAAN,OAAUH,EAAKG,KAAK,IAApB,kBASU,wBAGHb,EAAcS,QACf,wBACEG,UAAU,4BACVE,KAAK,SACLC,QAASJ,KAAKJ,MAHhB,sBASJ,oBAAIK,UAAU,OAAd,SACGf,EAAgBmB,KAAI,SAACd,GAAD,OACnB,sBAAKU,UAAU,kBAAf,UACE,oBAAeA,UAAU,aAAzB,SACGV,GADMA,GAIT,wBACEU,UAAWK,IACT,aACCjB,EAAcG,SAASD,GAEpB,oBADA,qBAGNY,KAAK,SACLC,QAAS,kBAAM,EAAKd,WAAWC,IARjC,SAUGF,EAAcG,SAASD,GACpB,SACA,0B,GA7EFgB,IAAMC,WAuFTrB,ICzGfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.203e0c08.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  handelGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.includes(good)) {\n      this.setState((state) => ({\n        selectedGoods: state.selectedGoods.filter(select => select !== good),\n      }));\n    } else {\n      this.setState((state) => ({\n        selectedGoods: [...state.selectedGoods, good],\n      }));\n    }\n  };\n\n  clear = () => {\n    this.setState((state) => {\n      const { selectedGoods: arrOfGoods } = state;\n\n      arrOfGoods.length = 0;\n\n      return { selectedGoods: arrOfGoods };\n    });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const normalizedGoods = (list: string[]): string => {\n      if (list.length > 1) {\n        return `${list.join(', ')} are selected`;\n      }\n\n      return `${list.join('')} is selected`;\n    };\n\n    return (\n      <div className=\"App content\">\n        <div className=\"content__container\">\n          <h1>\n            {selectedGoods.length\n              ? `${normalizedGoods(selectedGoods)}`\n              : 'No goods selected'}\n          </h1>\n\n          {!!selectedGoods.length && (\n            <button\n              className=\"button is-rounded is-info\"\n              type=\"button\"\n              onClick={this.clear}\n            >\n              Clear\n            </button>\n          )}\n        </div>\n        <ul className=\"list\">\n          {goodsFromServer.map((good) => (\n            <div className=\"list__container\">\n              <li key={good} className=\"list__item\">\n                {good}\n              </li>\n\n              <button\n                className={classNames(\n                  'is-rounded',\n                  !selectedGoods.includes(good)\n                    ? 'button is-primary'\n                    : 'button is-warning',\n                )}\n                type=\"button\"\n                onClick={() => this.handelGood(good)}\n              >\n                {selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}